worker_processes auto;
error_log /dev/stdout info;

events {
    worker_connections 10000;
}

http {
    include       /usr/local/openresty/nginx/conf/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$host" "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$upstream_cache_status"';

    access_log /dev/stdout  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    map $http_user_agent $is_desktop {
        default 1;
        ~*linux.*android|windows\s+(?:ce|phone) 0; # exceptions to the rule
        ~*spider|crawl|slurp|bot 1; # bots
        ~*windows|linux|os\s+x\s*[\d\._]+|solaris|bsd 1; # OSes
    }

    map $is_desktop $is_mobile {
        1 0;
        0 1;
    }

    proxy_cache_path  /var/run/proxy_cache levels=1:2 keys_zone=DYNAMIC:10m max_size=1g inactive=1h;
    proxy_cache_path  /var/run/proxy_cache_statics levels=1:2 keys_zone=STATIC:10m max_size=5g inactive=7d;
    proxy_cache_key "$is_mobile$scheme$host$request_uri";

    proxy_redirect off;
    proxy_set_header Host $host:$server_port;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Host $server_name;
    proxy_set_header X-Forwarded-Server $server_name;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Accept-Encoding "gzip";
    proxy_pass_request_headers on;
    client_body_buffer_size 128k;
    proxy_connect_timeout 600;
    proxy_send_timeout 600;
    proxy_read_timeout 600;
    proxy_buffers 256 16k;
    proxy_buffer_size 32k;

    # The "auto_ssl" shared dict must be defined with enough storage space to
    # hold your certificate data.
    lua_shared_dict auto_ssl 1m;

    # A DNS resolver must be defined for OSCP stapling to function.
    resolver 8.8.8.8;

    # Initial setup tasks.
    init_by_lua_block {
	mobile_detect = require "mobile-detect"
	
        auto_ssl = (require "resty.auto-ssl").new()

        -- Define a function to determine which SNI domains to automatically handle
        -- and register new certificates for. Defaults to not allowing any domains,
        -- so this must be configured.
        auto_ssl:set("allow_domain", function(domain)
            return true
        end)
        auto_ssl:set("dir", "/tmp")

        auto_ssl:init()
    }

    init_worker_by_lua_block {
        auto_ssl:init_worker()
    }

    # Internal server running on port 8999 for handling certificate tasks.
    server {
        listen 127.0.0.1:8999;
            location / {
                content_by_lua_block {
                auto_ssl:hook_server()
            }
        }
    }

    include /usr/local/openresty/nginx/conf/conf.d/*.conf;
}

